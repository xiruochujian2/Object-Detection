# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLO11 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 319 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 319 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 409 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 631 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 631 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs
fusion_mode: bifpn
node_mode: C3k2
head_channel: 256

# 0-P1/2
# 1-P2/4
# 2-P3/8
# 3-P4/16
# 4-P5/32

# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, fasternet_t0, []]  # 4
  - [-1, 1, SPPF, [1024, 5]]  # 5
  - [-1, 2, C2PSA, [1024]] # 6

# YOLO11n head
head:
  - [2, 1, Conv, [head_channel]]  # 7-P3/8
  - [3, 1, Conv, [head_channel]]  # 8-P4/16
  - [6, 1, Conv, [head_channel]]  # 9-P5/32

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 10 P5->P4
  - [[-1, 8], 1, Fusion, [fusion_mode]] # 
  - [-1, 3, node_mode, [head_channel, False]] # 12-P4/16
  
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 13 P4->P3
  - [[-1, 7], 1, Fusion, [fusion_mode]] # 
  - [-1, 3, node_mode, [head_channel, False]] # 15-P3/8

  - [1, 1, Conv, [head_channel, 3, 2]] # 16 P2->P3
  - [[-1, 7, 15], 1, Fusion, [fusion_mode]] # 
  - [-1, 3, node_mode, [head_channel, False]] # 18-P3/8

  - [-1, 1, Conv, [head_channel, 3, 2]] # 19 P3->P4
  - [[-1, 8, 12], 1, Fusion, [fusion_mode]] # 
  - [-1, 3, node_mode, [head_channel, False]] # 20-P4/16

  - [-1, 1, Conv, [head_channel, 3, 2]] # 21 P4->P5
  - [[-1, 9], 1, Fusion, [fusion_mode]] # 
  - [-1, 3, node_mode, [head_channel, False]] # 22-P5/32

  - [[18, 20, 22], 1, Detect, [nc]]  # Detect(P3, P4, P5)